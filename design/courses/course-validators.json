{
  "validate_doc_update":
    "function (newDoc, oldDoc, userCtx, secObj) {\n  function require(field) {\n    var errMessage = field + ' is required';\n    if (!newDoc[field]) {\n      throw { forbidden: errMessage };\n    }\n  }\n  function isInteger(field) {\n    var val = newDoc[field];\n    var errMessage = field + ' must be a number';\n\n    if (isNan(parseInt(val)) || !isFinite(val)) {\n      throw { forbidden: errMessage };\n    }\n  }\n  function isHex(field) {\n    var val = newDoc[field];\n    var errMessage = field + ' is not a valid hex';\n\n    if (!/^#[A-F0-9]{6}$/i.test(val)) {\n      throw { forbidden: errMessage };\n    }\n  }\n  function isTime(field) {\n    var val = newDoc[field];\n    var errMessage = field + ' must be in the form of hh:mm';\n\n    if (!/^([01]?[0-9]|2[0-3]):[0-5][0-9]?$/.test(val)) {\n      throw { forbidden: errMessage };\n    }\n  }\n  function isDate(field) {\n    var val = newDoc[field];\n    var errMessage = field + ' must be in the form of yyyy-mm-dd';\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}/.test(val)) {\n      throw { forbidden: errMessage };\n    }\n    var date = new Date(val);\n    var errMessage = field + ' is an invalid date';\n    if (!date.getTime()) {\n      return errMessage;\n    }\n  }\n  function endTimeValidator() {\n    var startTime = newDoc['startTime'];\n    var endTime = newDoc['endTime'];\n    var errMessage = 'The end time cannot be before the start time';\n\n    if (\n      new Date('1970-1-1 ' + startTime.value).getTime() >\n      new Date('1970-1-1 ' + endTime.value).getTime()\n    ) {\n      return errMessage;\n    }\n  }\n  function endDateValidator() {\n    var startDate = newDoc['startDate'];\n    var endDate = newDoc['endDate'];\n    var errMessage = 'The end date cannot be before the start date';\n\n    if (\n      new Date(startDate.value).getTime() > new Date(endDate.value).getTime()\n    ) {\n      return errMessage;\n    }\n  }\n  if (!newDoc._deleted) {\n    require('courseTitle');\n    require('description');\n\n    if (newDoc['endTime']) {\n      require('startTime');\n      isTime('startTime');\n      isTime('endTime');\n      endTimeValidator();\n    }\n    if (newDoc['endDate']) {\n      require('startDate');\n      isDate('startDate');\n      isDate('endDate');\n      endDateValidator();\n    }\n  }\n}"
}
